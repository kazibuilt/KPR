import{f as e,r as a,E as s,j as r,o as t,l as u,m as l}from"./entry.40e762a9.js";import{P as n}from"./svg-points.vue.baf20d35.js";function o(e,a,s){const r=a-1,t=s[i(r,s.length)];return"Z"!==t.marker?t:o(e,r,s)}function v(e,a,s){const r=a+1,t=s[i(r,s.length)];return"Z"===t.marker?v(e,r,s):t}function c(e,a,s){let r=s[a-1]||{values:{x:0,y:0}};if(e.marker===e.marker.toLowerCase())switch(e.marker=e.marker.toUpperCase(),e.marker){case"M":case"L":case"A":case"T":e.values.x+=r.values.x,e.values.y+=r.values.y;break;case"H":e.marker="L",e.values.x+=r.values.x,e.values.y=r.values.y;break;case"V":e.marker="L",e.values.x=r.values.x,e.values.y+=r.values.y;break;case"C":e.values.x+=r.values.x,e.values.y+=r.values.y,e.values.x1+=r.values.x,e.values.y1+=r.values.y,e.values.x2+=r.values.x,e.values.y2+=r.values.y;break;case"S":e.values.x+=r.values.x,e.values.y+=r.values.y,e.values.x2+=r.values.x,e.values.y2+=r.values.y;break;case"Q":e.values.x+=r.values.x,e.values.y+=r.values.y,e.values.x1+=r.values.x,e.values.y1+=r.values.y}else if(e.marker===e.marker.toUpperCase())switch(e.marker){case"H":e.marker="L",e.values.y=r.values.y;break;case"V":e.marker="L",e.values.x=r.values.x}if("Z"===e.marker){let r=function(e,a){return"M"===e[a].marker?e[a]:r(e,a-1)},t=r(s,a);e.values.x=t.values.x,e.values.y=t.values.y}return e}function i(e,a){return(e%a+a)%a}function h(e,a,s){if(0!==a&&"L"===e.marker){let r=s[a-1];["x","y"].every((a=>0===Math.round(Math.abs(r.values[a]-e.values[a]))))&&(e.overlap=!0)}return e}function x(e,a){const s=["x","y"].every((s=>0===Math.round(Math.abs(e[a].values[s]-e[0].values[s]))));"L"===e[a].marker&&s&&(e[a].overlap=!0,x(e,a-1)),"Z"===e[a].marker&&x(e,a-1)}function m(e,a){return Math.atan2(a.x-e.x,a.y-e.y)}function k(e,a){const s=e.x-a.x,r=e.y-a.y;return Math.sqrt(Math.pow(s,2)+Math.pow(r,2))}function p(e,a){return Math.sin(e)*a}function y(e,a){return Math.cos(e)*a}function f(e,a){const s=a/Math.tan(e);return s===1/0||s===-1/0||isNaN(s)?a:s}function d(e){const a=["radiusX","radiusY","rotation","largeArc","sweep","x1","y1","x2","y2","x","y"];return e.map((e=>{let s="";if("Z"!==e.marker){const r=Object.keys(e.values);s=a.filter((e=>-1!==r.indexOf(e))).map((a=>e.values[a])).join()}return`${e.marker}${s}`})).join("").trim()}function g(e){const a=/-?[0-9]*\.?\d+/g;return[...e.matchAll(/[MmLlSsQqLlHhVvCcSsQqTtAaZz]/g)].map((e=>({marker:e[0],index:e.index}))).reduceRight(((a,s)=>{const r=e.substring(s.index,a.length?a[a.length-1].index:e.length);return a.concat([{marker:s.marker,index:s.index,chunk:r.length>0?r.substr(1,r.length-1):r}])}),[]).reverse().flatMap((e=>{const s=e.chunk.match(a),r=s?s.map(parseFloat):[];return function(e,a){const s=[];switch(e.toUpperCase()){case"M":for(let r=0;r<a.length;r+=2){let t;t=e===e.toUpperCase()?0===r?"M":"L":0===r?"m":"l",s.push({marker:t,values:{x:a[r],y:a[r+1]}})}break;case"L":for(let r=0;r<a.length;r+=2)s.push({marker:e,values:{x:a[r],y:a[r+1]}});break;case"H":for(let r=0;r<a.length;r++)s.push({marker:e,values:{x:a[r],y:0}});break;case"V":for(let r=0;r<a.length;r++)s.push({marker:e,values:{x:0,y:a[r]}});break;case"C":for(let r=0;r<a.length;r+=6)s.push({marker:e,values:{x1:a[r],y1:a[r+1],x2:a[r+2],y2:a[r+3],x:a[r+4],y:a[r+5]}});break;case"S":for(let r=0;r<a.length;r+=4)s.push({marker:e,values:{x2:a[r],y2:a[r+1],x:a[r+2],y:a[r+3]}});break;case"Q":for(let r=0;r<a.length;r+=4)s.push({marker:e,values:{x1:a[r],y1:a[r+1],x:a[r+2],y:a[r+3]}});break;case"T":for(let r=0;r<a.length;r+=2)s.push({marker:e,values:{x:a[r],y:a[r+1]}});break;case"A":for(let r=0;r<a.length;r+=7)s.push({marker:e,values:{radiusX:a[r],radiusY:a[r+1],rotation:a[r+2],largeArc:a[r+3],sweep:a[r+4],x:a[r+5],y:a[r+6]}});break;case"Z":s.push({marker:e,values:{x:0,y:0}})}return s}(e.marker,r)})).map(c)}function b(e,a,s){let r=[],t=[];return s&&e.forEach((e=>function(e,a){return Object.keys(e.values).forEach((s=>e.values[s]=e.values[s]&&parseFloat(e.values[s].toFixed(a)))),e}(e,s))),e.forEach((e=>{"M"===e.marker&&r.push([]),r[r.length-1].push(e)})),r.forEach((e=>{e.map(h),x(e,e.length-1);const s="Z"==e[e.length-1].marker;e.filter((e=>!e.overlap)).map(((e,r,u)=>{const l=o(e,r,u),n=v(e,r,u),c=m(e.values,l.values),i=m(e.values,n.values),h=i-c,x=h*(180/Math.PI),d=function(e,a,s){const r=k(e.values,s.values),t=k(a.values,e.values);return Math.min(t,r)}(e,l,n),g=Math.abs(function(e,a){return a*Math.tan(e)}(h/2,d/2)),b=Math.min(a,g),M=function(e,a){let s,r=0,t=e*(180/Math.PI);return t<0&&t>=-180||t>180&&t<360?s=f(e/2,-a):(s=f(e/2,a),r=1,s===1/0&&(s=a)),{offset:s,sweepFlag:r}}(h,b),w=M.offset,L=M.sweepFlag,A=(0==r||r==u.length-1)&&!s;switch(e.marker){case"M":case"L":const a=[e.values.x+p(c,w),e.values.y+y(c,w)],s=[e.values.x+p(i,w),e.values.y+y(i,w)];A?t.push({marker:e.marker,values:e.values}):t.push({marker:e.marker,values:{x:parseFloat(a[0].toFixed(3)),y:parseFloat(a[1].toFixed(3))}}),A||"L"!==n.marker&&"M"!==n.marker||t.push({marker:"A",radius:b,values:{radiusX:b,radiusY:b,rotation:x,largeArc:0,sweep:L,x:parseFloat(s[0].toFixed(3)),y:parseFloat(s[1].toFixed(3))}});break;case"C":case"S":case"Q":case"T":case"A":case"Z":t.push({marker:e.marker,values:e.values})}}))})),{path:d(t),commands:t}}const M=e({__name:"svg-points",props:{points:{default:[{x:0,y:0},{x:100,y:0},{x:100,y:100},{x:0,y:100}]},size:{default:{width:100,height:100}},radius:{default:0}},setup(e){const o=e,v=a(null),c=a(null);return s((()=>[o.points,o.radius]),(()=>{const{points:e}=o,a=n();e.forEach(((s,r)=>{const{x:t,y:u}=s;0==r?a.moveTo(t,u):a.lineTo(t,u),r==e.length-1&&(a.close(),a.end())}));const s=(r=a.currentPath,t=o.radius,b([...g(r)],t,u));var r,t,u;c.value.setAttribute("d",s.path)})),s((()=>o.size),(e=>{const a=v.value;a.setAttribute("width",e.width),a.setAttribute("height",e.height),a.setAttribute("viewBox",`0 0 ${e.width} ${e.height}`)})),r((()=>{})),(e,a)=>(t(),u("svg",{ref_key:"refRoot",ref:v,class:"svgPoints",xmlns:"http://www.w3.org/2000/svg"},[l("path",{ref_key:"refPath",ref:c,d:"",class:"path"},null,512)],512))}},[["__scopeId","data-v-b2253613"]]);export{M as default};

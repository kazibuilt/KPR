import{a7 as e}from"./entry.40e762a9.js";function t(e,t){for(var n=0;n<t.length;n++){const l=t[n];if("string"!=typeof l&&!Array.isArray(l))for(const t in l)if("default"!==t&&!(t in e)){const n=Object.getOwnPropertyDescriptor(l,t);n&&Object.defineProperty(e,t,n.get?n:{enumerable:!0,get:()=>l[t]})}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}var n,l={};({get exports(){return l},set exports(e){l=e}}).exports=((n=function(){function e(e){return r.appendChild(e.dom),e}function t(e){for(var t=0;t<r.children.length;t++)r.children[t].style.display=t===e?"block":"none";l=e}var l=0,r=document.createElement("div");r.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",r.addEventListener("click",(function(e){e.preventDefault(),t(++l%r.children.length)}),!1);var i=(performance||Date).now(),o=i,a=0,f=e(new n.Panel("FPS","#0ff","#002")),c=e(new n.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var d=e(new n.Panel("MB","#f08","#201"));return t(0),{REVISION:16,dom:r,addPanel:e,showPanel:t,begin:function(){i=(performance||Date).now()},end:function(){a++;var e=(performance||Date).now();if(c.update(e-i,200),e>o+1e3&&(f.update(1e3*a/(e-o),100),o=e,a=0,d)){var t=performance.memory;d.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){i=this.end()},domElement:r,setMode:t}}).Panel=function(e,t,n){var l=1/0,r=0,i=Math.round,o=i(window.devicePixelRatio||1),a=80*o,f=48*o,c=3*o,d=2*o,p=3*o,s=15*o,u=74*o,m=30*o,h=document.createElement("canvas");h.width=a,h.height=f,h.style.cssText="width:80px;height:48px";var y=h.getContext("2d");return y.font="bold "+9*o+"px Helvetica,Arial,sans-serif",y.textBaseline="top",y.fillStyle=n,y.fillRect(0,0,a,f),y.fillStyle=t,y.fillText(e,c,d),y.fillRect(p,s,u,m),y.fillStyle=n,y.globalAlpha=.9,y.fillRect(p,s,u,m),{dom:h,update:function(f,g){l=Math.min(l,f),r=Math.max(r,f),y.fillStyle=n,y.globalAlpha=1,y.fillRect(0,0,a,s),y.fillStyle=t,y.fillText(i(f)+" "+e+" ("+i(l)+"-"+i(r)+")",c,d),y.drawImage(h,p+o,s,u-o,m,p,s,u-o,m),y.fillRect(p+u-o,s,o,m),y.fillStyle=n,y.globalAlpha=.9,y.fillRect(p+u-o,s,o,i((1-f/g)*m))}}},n);const r=t({__proto__:null,default:l},[l]);export{r as s};

var e=Object.defineProperty,s=(s,t,i)=>(((s,t,i)=>{t in s?e(s,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[t]=i})(s,"symbol"!=typeof t?t+"":t,i),i);import{C as t}from"./index.6c8f1534.js";import{T as i}from"./three-object.387dbe05.js";import{a as o,M as r}from"./achievement.f0eeff27.js";import{D as a,x as n}from"./dom-component.59802661.js";import{g as c}from"./drawing.d211013c.js";import{g as p}from"./circle.29cefe4c.js";import{S as h,g as l,P as m}from"./three.module.522d90d0.js";import{i as d}from"./in-range.d69fbb78.js";import{s as v}from"./simple-three.8301cfdd.js";import{d as g}from"./utils.bef7071b.js";import{L as u}from"./constants.a4ba8ea6.js";import{s as f}from"./store.4d67c1b5.js";import{D as j}from"./dom-element.35f09cfb.js";import{aU as w}from"./entry.40e762a9.js";import{a as S}from"./index-default.25f36e61.js";function y(e,s,t,i){return{x:e,y:s,width:t,height:i}}function b(e,s,t){return d(e,t.x,t.x+t.width)&&d(s,t.y,t.y+t.height)}class _ extends t{constructor(){super(...arguments),s(this,"options",{template:({props:e,options:s,context:t})=>n`<div class="itemSector ${s.uniq?"itemSector--uniq":null}" ?display=${e.vUI}
    @click=${t.onSectorUIClick}>
    <div class="itemSector__icon">
        <img class="itemSector__iconImg" src="${s.icon.filename}" alt="icon">
    </div>
    <div class="itemSector__infos">

        <h2 class="itemSector__name">
            ${s.name}
            <div class="arrow arrow--left"><svg viewBox="0 0 12 12">
                    <use href="#triangle"></use>
                </svg></div>
            <div class="arrow arrow--right"><svg viewBox="0 0 12 12">
                    <use href="#triangle"></use>
                </svg></div>
        </h2>
        <p class="itemSector__nMarks">${e.nRecords} records</p>
    </div>
</div>`}),s(this,"props",{align:"left",handleSelectSector:w,handleSelectMark:w,prZoom:0,vUI:e=>e.prZoom<.5,pos:e=>({pX:e.pX,pY:e.pY}),nRecords:0}),s(this,"onSectorUIClick",(()=>this.options.handleSelectSector(this.options)))}async onSetup(){this.object2d=new o(this.el),this.object.add(this.object2d);const{useHelpers:e}=this.options;e&&await this.setupHelper(),await this.setupAchievements(),await this.setupHighlight(),this.bounds=y(0,0,0,0)}async setupHighlight(){const e=new h({vertexShader:v,fragmentShader:`\n                varying vec2 vUv;\n                ${c}\n                ${p}\n                void main() {\n                    vec2 st = vUv;\n                    float sd = fill(sdCircle(st), 0.4, 0.7);\n                    float a = 1.;\n                    gl_FragColor = vec4(vec3(1.), sd * a);\n                }`,transparent:!0,depthWrite:!1,depthTest:!1});this.props;const s=this.meshHighlight=new l(new m(8,8),e);s.layers.set(u.POST),s.name="MeshHighlight",this.object.add(s)}async setupHelper(){const e=this.shader=new h({vertexShader:v,fragmentShader:`\n                varying vec2 vUv;\n                ${c}\n                ${p}\n                void main() {\n                    float sd = circle(vUv, 1.);\n                    gl_FragColor = vec4(vec3(1., 0., 0.), 0.5 + sd * 0.5);\n                }`,transparent:!0}),{radius:s}=this.props,t=this.meshHelper=new l(new m(2*s,2*s),e);t.name="MeshHelper",this.object.add(t)}async setupAchievements(){let{prng:e,achievements:s}=this.options;const{radius:t}=this.props;this.props.nRecords=s.length;const i=g({nPoints:s.length,rad:t,size:.25,prng:e});this.achievements=await Promise.all(s.map((async(e,s)=>{const t=i[s];return await(new r).setup({options:{addTo:this.object,...e},props:{sizeBase:e=>e.achieved?98:68,size:e=>Math.min(e.sizeBase*f().state.scale,1.2*e.sizeBase),v:()=>this.props.prZoom>=.5,pX:t.x,pY:t.y}})})))}setPos({pX:e,pY:s}){const{radius:t}=this.props;this.bounds=y(e-t,s-t,2*t,2*t)}onDestroy(){this.achievements.forEach((e=>e.destroy())),this.achievements=null}}S(_,[a,j,i]);const x=Object.freeze(Object.defineProperty({__proto__:null,default:_},Symbol.toStringTag,{value:"Module"}));export{_ as M,b as r,x as s};

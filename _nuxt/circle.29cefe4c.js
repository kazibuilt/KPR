const e="#define GLSLIFY 1\n#ifndef FNC_SDFCIRCLE\n#define FNC_SDFCIRCLE\nfloat sdCircle(in vec2 st,in vec2 center){return length(st-center)*2.;}float sdCircle(in vec2 st){return sdCircle(st,vec2(.5));}\n#endif\n#ifndef FNC_CIRCLE\n#define FNC_CIRCLE\nfloat circle(vec2 st,float size){return fill(sdCircle(st),size);}float circle(vec2 st,float size,float strokeWidth){return stroke(sdCircle(st),size,strokeWidth);}\n#endif\nfloat createCircle(vec2 uv,float s){float scale=1.0/s;vec2 center=vec2(0.5);float radius=0.5;vec2 transformedPosition=(uv-center)*scale;float sdf=length(transformedPosition);float circleRadius=radius;float value=aastep(circleRadius,sdf);return value;}float createCircle(vec2 uv,float radius,float s){float scale=1.0/s;vec2 center=vec2(0.5);vec2 transformedPosition=(uv-center)*scale;float sdf=length(transformedPosition);float dx=dFdx(uv.x*1.0/scale);float circleRadius=dx*radius;float value=aastep(circleRadius,sdf);return value;}";export{e as g};
